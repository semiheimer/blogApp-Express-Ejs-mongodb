{%- include('partials/incHeader') %}

<!-- Blog Categories -->
<div class="nav-scroller py-1 mb-3 border-bottom">
    <nav class="nav nav-underline justify-content-between">
        {% const selectedCategory1=selectedCategory!=="undefined"?selectedCategory:"" %}
        {% for (const category of categories) { %}
        <a class="nav-item nav-link {%= selectedCategory1==category._id? 'link-underline':'' %}"
            id='{%= category._id %}' href="/posts?filter[blogCategoryId]={%= category._id %}&page=1"
            onclick="selectCategory(this, '{%= selectedCategory1 %}')"><b>{%=
                category.name
                %}</b></a>
        {% } %}
    </nav>
</div>
</div>
<!-- main start -->
<main class="container">
    <div class="row g-5">
        <div class="col-md-8">
            {% if (user) { %}
            <div class="admin-area text-end">
                <a class="btn btn-primary" href="/posts/create">New Post</a>
            </div>
            {% } else { %}
            <div class="admin-area text-end">
                <a class="btn btn-primary" href="auth/login">New Post</a>
            </div>
            {% } %}
            <h3 class="pb-4 fst-italic border-bottom">
                Welcome!
            </h3>
            <!-- BlogPosts -->
            {%- include('partials/post') %}
            <!-- Pagination -->
            {%- include('partials/incPagination') %}
            <!-- totalRecords -->
            <div class=" text-center mb-4">
                <span class=" p-2 text-black">Showing {%= details.skip+1 %} to {%= details?.pages?.next ?
                    details.skip+ details.limit: details?.totalRecords %} of {%=
                    details.totalRecords %} Entries </span>
            </div>

        </div>
        {%- include('partials/recentPosts') %}
    </div>
</main>
<!-- main end -->

{%- include('partials/incFooter') %}

<!--to open readmore clicked -->
<!-- <script>
    function readMore(postId) {
        const dots = document.getElementById("dots-" + postId);
        const moreText = document.getElementById("more-" + postId);
        const btnText = document.getElementById("myBtn-" + postId);
        if (dots.style.display === "none") {
            dots.style.display = "inline";
            btnText.innerHTML = "read more";
            moreText.style.display = "none";
        } else {
            dots.style.display = "none";
            btnText.innerHTML = "read less";
            moreText.style.display = "inline";
        }
    }
</script> -->

<script>
    async function like(postId) {
        try {
            const response = await fetch(`/api/v1/posts/${postId}/like`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                },
            });
            if (!response.ok) {
                throw new Error(`API request failed, HTTP error code: ${response.status}`);
            }
            const responseData = await response.json();
            document.getElementById("likeButton_" + postId).innerText = responseData.result?.likedUsers.length || 0;
        } catch (error) {
            alert('Updating likes failed');
            console.error('Updating likes failed', error);
        }
    }

</script>